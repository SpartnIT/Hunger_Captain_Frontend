{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\nvar baseURL; // if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\n//     baseURL = 'http://127.0.0.1:8000';\n// }\n\nbaseURL = 'http://127.0.0.1:8000';\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\r\n * Add requireToken: true in request config, for API that required Authorization token\r\n */\n\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = async params => {\n      try {\n        const response = await api.get('/posts/', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.addPost = async postBody => {\n      const formData = new FormData();\n\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n\n      try {\n        const response = await api.post('/posts/add/', formData);\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.deletePost = async id => {\n      try {\n        return await api.delete(`/posts/delete/${id}/`);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n  }\n\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","getPosts","params","response","get","data","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete"],"sources":["C:/Users/Davian/Desktop/techis-wd-forum-django-react/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\r\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\r\n\r\nvar baseURL;\r\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\r\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\r\n// } else {\r\n//     baseURL = 'http://127.0.0.1:8000';\r\n// }\r\n\r\nbaseURL = 'http://127.0.0.1:8000'; \r\n\r\nconst api = axios.create({\r\n    baseURL: baseURL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n/**\r\n * Add requireToken: true in request config, for API that required Authorization token\r\n */\r\napi.interceptors.request.use(\r\n    config => {\r\n        if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\r\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\r\n        }\r\n\r\n        return config;\r\n    },\r\n    err => {\r\n        console.error(err);\r\n    }\r\n);\r\n\r\nexport default class API {\r\n    getPosts = async params => {\r\n        try {\r\n            const response = await api.get('/posts/', { params });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n    addPost = async postBody => {\r\n        const formData = new FormData();\r\n\r\n        for (const key in postBody) {\r\n            formData.append(key, postBody[key]);\r\n        }\r\n\r\n        try {\r\n            const response = await api.post('/posts/add/', formData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n    deletePost = async id => {\r\n        try {\r\n            return await api.delete(`/posts/delete/${id}/`);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,cAAc,GAAG,yBAAvB;AAEA,IAAIC,OAAJ,C,CACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,GAAG,uBAAV;AAEA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;EACrBF,OAAO,EAAEA,OADY;EAErBG,OAAO,EAAE;IACL,gBAAgB;EADX;AAFY,CAAb,CAAZ;AAOA;AACA;AACA;;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACIC,MAAM,IAAI;EACN,IAAIA,MAAM,CAACC,YAAP,IAAuBC,YAAY,CAACC,OAAb,CAAqBX,cAArB,CAA3B,EAAiE;IAC7DQ,MAAM,CAACJ,OAAP,CAAeQ,MAAf,CAAsB,eAAtB,IAAyCC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBX,cAArB,CAAX,EAAiDe,KAA1F;EACH;;EAED,OAAOP,MAAP;AACH,CAPL,EAQIQ,GAAG,IAAI;EACHC,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,CAVL;AAaA,eAAe,MAAMG,GAAN,CAAU;EAAA;IAAA,KACrBC,QADqB,GACV,MAAMC,MAAN,IAAgB;MACvB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAJ,CAAQ,SAAR,EAAmB;UAAEF;QAAF,CAAnB,CAAvB;QACA,OAAOC,QAAQ,CAACE,IAAhB;MACH,CAHD,CAGE,OAAON,KAAP,EAAc;QACZ,MAAM,IAAIO,KAAJ,CAAUP,KAAV,CAAN;MACH;IACJ,CARoB;;IAAA,KASrBQ,OATqB,GASX,MAAMC,QAAN,IAAkB;MACxB,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;MAEA,KAAK,MAAMC,GAAX,IAAkBH,QAAlB,EAA4B;QACxBC,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAqBH,QAAQ,CAACG,GAAD,CAA7B;MACH;;MAED,IAAI;QACA,MAAMR,QAAQ,GAAG,MAAMpB,GAAG,CAAC8B,IAAJ,CAAS,aAAT,EAAwBJ,QAAxB,CAAvB;QACA,OAAON,QAAQ,CAACE,IAAhB;MACH,CAHD,CAGE,OAAON,KAAP,EAAc;QACZ,MAAM,IAAIO,KAAJ,CAAUP,KAAV,CAAN;MACH;IACJ,CAtBoB;;IAAA,KAuBrBe,UAvBqB,GAuBR,MAAMC,EAAN,IAAY;MACrB,IAAI;QACA,OAAO,MAAMhC,GAAG,CAACiC,MAAJ,CAAY,iBAAgBD,EAAG,GAA/B,CAAb;MACH,CAFD,CAEE,OAAOhB,KAAP,EAAc;QACZ,MAAM,IAAIO,KAAJ,CAAUP,KAAV,CAAN;MACH;IACJ,CA7BoB;EAAA;;AAAA"},"metadata":{},"sourceType":"module"}